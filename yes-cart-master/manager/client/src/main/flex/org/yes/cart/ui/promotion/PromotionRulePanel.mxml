<?xml version="1.0"?>
<!--
  - Copyright 2009 Denys Pavlov, Igor Azarnyi
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:Canvas
           label="@Resource(bundle='PromotionManagementPanel',key='eligibilityCondition')"
           xmlns:mx="http://www.adobe.com/2006/mxml"
           width="100%"
           height="100%"
           creationComplete="init()">

    <mx:Script><![CDATA[
        import mx.binding.utils.BindingUtils;
        import mx.binding.utils.ChangeWatcher;
        import mx.controls.Alert;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import org.yes.cart.impl.PromotionDTOImpl;
        import org.yes.cart.shopmanager.ShopManagerGlobal;
        import org.yes.cart.util.DomainUtils;

        private var _promotion:PromotionDTOImpl;

        private var _updateCallback:Function;

        public function set updateCallback(value:Function):void {
            _updateCallback = value;
        }

        public function get promotion():PromotionDTOImpl {
            return _promotion;
        }

        public function set promotion(value:PromotionDTOImpl):void {
            unbindProperties();
            if (_promotion != null && _promotion.promotionId == value.promotionId &&
                    (_promotion.eligibilityCondition != value.eligibilityCondition ||
                    _promotion.promoActionContext != value.promoActionContext ||
                    _promotion.couponTriggered != value.couponTriggered ||
                    _promotion.canBeCombined != value.canBeCombined)) {
                // same promotion we may have unsaved changed, so leave as it was
                formChanged = true;
            } else {
                formChanged = false;
                _promotion = value;
            }
            allowEditing = DomainUtils.isNewPK(_promotion.promotionId) || (!promotionEnabled && !_promotion.enabled);
            bindProperties();

            var _promoName:String = resourceManager.getString('PromotionManagementPanel', 'promoType' + value.promoType);
            if (_promoName == null) {
                eligibilityConditionLabel = resourceManager.getString('PromotionManagementPanel', 'eligibilityCondition');
            } else {
                eligibilityConditionLabel = resourceManager.getString('PromotionManagementPanel', 'eligibilityCondition') + ' (' + _promoName + ')';
            }

            var _actionName:String = resourceManager.getString('PromotionManagementPanel', 'promoAction' + value.promoAction);
            if (_actionName == null) {
                promoActionContextLabel = resourceManager.getString('PromotionManagementPanel', 'promoActionContext');
            } else {
                promoActionContextLabel = _actionName;
            }
        }

        private function onUpdatePromotionResult(event:ResultEvent):void {
            // updated
            if (_updateCallback != null) {
                _updateCallback(event.result);
            }
        }

        protected function onRpcMethodFault(event:FaultEvent):void {
            ShopManagerGlobal.instance.defaultOnRpcMethodFault(event);
        }

        private function onChange(event:Event):void {
            formChanged = true;
            allowEditing = DomainUtils.isNewPK(_promotion.promotionId) || (!promotionEnabled && !_promotion.enabled);
        }

        private function onSaveCondition(event:MouseEvent):void {
            if (DomainUtils.isNewPK(_promotion.promotionId)) {
                remotePromotionService.create(_promotion);
            } else {
                remotePromotionService.update(_promotion);
            }
        }

        private function init():void {
            formChanged = false;
        }

        private function promoActionContextTooltip():String {
            if (promotion.promoAction != null) {
                return resourceManager.getString('PromotionManagementPanel', 'promoAction' + promotion.promoAction);
            }
            return "";
        }

        private function unbindProperties():void {
            for each (var watcher:ChangeWatcher in propertyWatchers) {
                watcher.unwatch();
            }
            propertyWatchers.removeAll();
        }

        private function bindProperties():void {


            try {

                propertyWatchers.addItem(BindingUtils.bindProperty(eligibilityCondition, "text", _promotion, "eligibilityCondition"));
                propertyWatchers.addItem(BindingUtils.bindProperty(promoActionContext, "text", _promotion, "promoActionContext"));
                propertyWatchers.addItem(BindingUtils.bindProperty(_promotion, "eligibilityCondition", eligibilityCondition, "text"));
                propertyWatchers.addItem(BindingUtils.bindProperty(_promotion, "promoActionContext", promoActionContext, "text"));
                propertyWatchers.addItem(BindingUtils.bindProperty(couponTriggered, "selected", _promotion, "couponTriggered"));
                propertyWatchers.addItem(BindingUtils.bindProperty(_promotion, "couponTriggered", couponTriggered, "selected"));
                propertyWatchers.addItem(BindingUtils.bindProperty(canBeCombined, "selected", _promotion, "canBeCombined"));
                propertyWatchers.addItem(BindingUtils.bindProperty(_promotion, "canBeCombined", canBeCombined, "selected"));

            } catch (e:Error) {

                Alert.show("" + e.toString());

            }

        }
        ]]></mx:Script>


    <mx:RemoteObject showBusyCursor="true" id="remotePromotionService"
                     destination="remotePromotionService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="create" name="create"
                   result="onUpdatePromotionResult(event)"
                   fault="onRpcMethodFault(event)"/>

        <mx:method id="update" name="update"
                   result="onUpdatePromotionResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>

    <mx:ArrayCollection id="propertyWatchers"/>
    <mx:Boolean id="formChanged"/>
    <mx:Boolean id="allowEditing"/>
    <mx:Boolean id="promotionEnabled"/>
    <mx:String id="eligibilityConditionLabel"/>
    <mx:String id="promoActionContextLabel"/>

    <mx:VBox>
        <mx:Form>
            <mx:FormItem label="{eligibilityConditionLabel}">
                <mx:TextArea id="eligibilityCondition" width="400" height="200" editable="{allowEditing}" change="onChange(event)"/>
                <mx:Text text="@Resource(bundle='PromotionManagementPanel',key='eligibilityConditionEditHint')" visible="{!allowEditing}" includeInLayout="{!allowEditing}"/>
            </mx:FormItem>
            <mx:FormItem label="{promoActionContextLabel}">
                <mx:HBox>
                    <mx:TextInput id="promoActionContext" width="150" editable="{allowEditing}" change="onChange(event)" toolTip="{promoActionContextTooltip()}"/>
                    <mx:Text text="@Resource(bundle='PromotionManagementPanel',key='eligibilityConditionEditHint')" visible="{!allowEditing}" includeInLayout="{!allowEditing}"/>
                </mx:HBox>
            </mx:FormItem>
            <mx:FormItem label="@Resource(bundle='PromotionManagementPanel',key='couponTriggered')">
                <mx:HBox>
                    <mx:CheckBox id="couponTriggered" enabled="{allowEditing}" change="onChange(event)"/>
                    <mx:Text text="@Resource(bundle='PromotionManagementPanel',key='eligibilityConditionEditHint')" visible="{!allowEditing}" includeInLayout="{!allowEditing}"/>
                </mx:HBox>
            </mx:FormItem>
            <mx:FormItem label="@Resource(bundle='PromotionManagementPanel',key='canBeCombined')">
                <mx:HBox>
                    <mx:CheckBox id="canBeCombined" enabled="{allowEditing}" change="onChange(event)"/>
                    <mx:Text text="@Resource(bundle='PromotionManagementPanel',key='eligibilityConditionEditHint')" visible="{!allowEditing}" includeInLayout="{!allowEditing}"/>
                </mx:HBox>
            </mx:FormItem>
        </mx:Form>
        <mx:ControlBar horizontalAlign="right" width="100%">
            <mx:Button id="saveBtn"
                       label="@Resource(bundle='ShopManagerApplication',key='save')"
                       enabled="{formChanged}"
                       click="onSaveCondition(event)"/>
        </mx:ControlBar>
    </mx:VBox>

</mx:Canvas>
