<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright 2009 Denys Pavlov, Igor Azarnyi
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:yci18n="org.yes.cart.ui.i18n.*"
                creationComplete="init()">

    <mx:Form>

        <mx:FormItem width="100%" label="@Resource(bundle='CarrierManagementPanel',key='slaType')">
            <mx:ComboBox id="slaTypeComboBox"
                         change="slaTypeChangeEvt(event)"
                         prompt="@Resource(bundle='CarrierManagementPanel',key='selectSlaType')"
                         width="195"
                         dataProvider="{slaTypes}"
                    />
        </mx:FormItem>

        <mx:FormItem id="scriptFormItem" width="100%"
                     label="@Resource(bundle='CarrierManagementPanel',key='script')"
                     toolTip="@Resource(bundle='CarrierManagementPanel',key='scriptHint')"
                >
            <mx:TextInput width="195" id="script"
                          toolTip="@Resource(bundle='CarrierManagementPanel',key='scriptHint')"/>
        </mx:FormItem>

        <mx:FormItem width="100%">
            <mx:Button id="saveBtn" label="@Resource(bundle='CarrierManagementPanel',key='update')"/>
        </mx:FormItem>

    </mx:Form>

    <mx:Script><![CDATA[
        import mx.binding.utils.BindingUtils;
        import mx.binding.utils.ChangeWatcher;
        import mx.controls.Alert;
        import mx.utils.StringUtil;

        import org.yes.cart.impl.CarrierSlaDTOImpl;

        private var _carrierSlaDTOImpl:CarrierSlaDTOImpl;
        [Bindable]
        private var slaTypes:Array;

        private var _binding:Array = [];

        public function get carrierSlaDTOImpl():CarrierSlaDTOImpl {
            return _carrierSlaDTOImpl;
        }

        public function set carrierSlaDTOImpl(value:CarrierSlaDTOImpl):void {
            _carrierSlaDTOImpl = value;
            unbind();
            bind();
        }


        private function init():void {
            slaTypes = new Array();
            slaTypes.push(new SlaType("F", resourceManager.getString('CarrierManagementPanel', 'slaTypeFixed')));
            slaTypes.push(new SlaType("R", resourceManager.getString('CarrierManagementPanel', 'slaTypeFree')));
            slaTypes.push(new SlaType("W", resourceManager.getString('CarrierManagementPanel', 'slaTypeWeightVolume')));
            slaTypes.push(new SlaType("E", resourceManager.getString('CarrierManagementPanel', 'slaTypeExternal')));
        }

        private function unbind():void {
            for each (var _watch:ChangeWatcher in _binding) {
                _watch.unwatch();
            }
            _binding = [];
        }

        private function bind():void {

            for each (var slaType:SlaType in slaTypeComboBox.dataProvider) {
                if (slaType.data == _carrierSlaDTOImpl.slaType) {
                    slaTypeComboBox.selectedItem = slaType;
                    break;
                }
            }

            _binding.push(BindingUtils.bindProperty(this.script, "text", _carrierSlaDTOImpl, "script"));

            _binding.push(BindingUtils.bindProperty(_carrierSlaDTOImpl, "script", this.script, "text"));

            changeControlsVisibility(_carrierSlaDTOImpl.slaType);


        }

        public function updateModel():void {

            _carrierSlaDTOImpl.slaType = SlaType(slaTypeComboBox.selectedItem).data;

        }

        public static function isBlank(str:String):Boolean {
            return (str == null || StringUtil.trim(str).length == 0);
        }

        private function slaTypeChangeEvt(event:Event):void {
            _carrierSlaDTOImpl.slaType = SlaType(event.currentTarget.selectedItem).data;
            changeControlsVisibility(_carrierSlaDTOImpl.slaType);
        }

        private function changeControlsVisibility(slaType:String):void {

            scriptFormItem.includeInLayout = scriptFormItem.visible = false;


            if ("F" == slaType) { // fixed

            } else if ("R" == slaType) { // free

            } else if ("E" == slaType) { //external
                scriptFormItem.includeInLayout = scriptFormItem.visible = true;
            }
        }


        /**
         * Create dialog to edit distance - weight and distance-volume matrix to price determination.
         */
        private function editPriceMatrix(event:MouseEvent):void {
            Alert.show(
                    resourceManager.getString('CarrierManagementPanel', 'notImplemented'),
                    resourceManager.getString('ShopManagerApplication', 'warning')
            );

        }
        ]]>
    </mx:Script>
</mx:Canvas>