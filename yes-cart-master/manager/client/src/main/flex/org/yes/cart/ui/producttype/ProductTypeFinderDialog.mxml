<?xml version="1.0"?>
<!--
  - Copyright 2009 Denys Pavlov, Igor Azarnyi
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="780" height="500"
                title="@Resource(bundle='ProductManagementPanel',key='findBtn')"
                showCloseButton="true"
                close="PopUpManager.removePopUp(this)"
                creationComplete="init();"
        >

  <mx:Script><![CDATA[
      import mx.collections.ArrayCollection;
      import mx.events.ListEvent;
      import mx.managers.PopUpManager;
      import mx.rpc.events.FaultEvent;
      import mx.rpc.events.ResultEvent;

      import org.yes.cart.impl.AttributeDTOImpl;

      import org.yes.cart.shopmanager.ShopManagerGlobal;

      public function get productTypeSelection():Array {
          return productTypesGrid.selectedItems;
      }

      protected function onRpcMethodFault(event:FaultEvent):void {
          ShopManagerGlobal.instance.defaultOnRpcMethodFault(event);
      }

      private function onFindProductTypesResult(event:ResultEvent):void {
          hasSelection = false;
          productTypesCollection = event.result as ArrayCollection;
      }


      private function onRefreshProductTypeClick(event:MouseEvent):void {
          remoteProductTypeService.findProductTypes(productTypeTextInput.text);
      }


      private function onProductTypeSelected(event:ListEvent):void {
          hasSelection = productTypesGrid.selectedItem != null;
      }

      private function init():void {

      }
      ]]></mx:Script>

  <mx:Boolean id="hasSelection">false</mx:Boolean>
  <mx:ArrayCollection id="productTypesCollection"/>

  <mx:RemoteObject showBusyCursor="true" id="remoteProductTypeService" destination="remoteProductTypeService"
                   channelSet="{ShopManagerGlobal.instance.channelSet}">

    <mx:method id="findProductTypes" name="findProductTypes"
               result="onFindProductTypesResult(event)"
               fault="onRpcMethodFault(event)"/>

  </mx:RemoteObject>

  <mx:VBox width="100%" height="100%"
           paddingLeft="2" paddingRight="2" paddingBottom="2" paddingTop="2">

    <mx:HBox paddingLeft="5" paddingTop="5" width="100%">

        <mx:Label text="@Resource(bundle='ProductTypeManagementPanel',key='name')"/>
      <mx:TextInput id="productTypeTextInput" width="100" toolTip="@Resource(bundle='ProductTypeManagementPanel',key='name')"/>

      <mx:Button label="@Resource(bundle='ProductManagementPanel',key='findBtn')"
                 toolTip="@Resource(bundle='ProductManagementPanel',key='findBtnHint')"
                 click="onRefreshProductTypeClick(event)"  height="100%"/>


    </mx:HBox>
    <mx:DataGrid width="100%" height="90%" id="productTypesGrid" dataProvider="{productTypesCollection}"
                 itemClick="onProductTypeSelected(event)">
      <mx:columns>
          <mx:DataGridColumn width="80"
                             headerText="@Resource(bundle='ProductTypeManagementPanel',key='id')"
                             dataField="producttypeId"/>
          <mx:DataGridColumn width="160"
                             headerText="@Resource(bundle='ProductTypeManagementPanel',key='name')"
                             dataField="name"/>
          <mx:DataGridColumn width="160"
                             headerText="@Resource(bundle='ProductTypeManagementPanel',key='uitemplate')"
                             dataField="uitemplate"/>
          <mx:DataGridColumn width="160"
                             headerText="@Resource(bundle='ProductTypeManagementPanel',key='uisearchtemplate')"
                             dataField="uisearchtemplate"/>
          <mx:DataGridColumn headerText="@Resource(bundle='ProductTypeManagementPanel',key='ensemble')"
                             dataField="ensemble" textAlign="center">
              <mx:itemRenderer>
                  <mx:Component>
                      <mx:HBox horizontalAlign="center"><mx:CheckBox enabled="false" selected="{data.ensemble}"/></mx:HBox>
                  </mx:Component>
              </mx:itemRenderer>
          </mx:DataGridColumn>
          <mx:DataGridColumn headerText="@Resource(bundle='ProductTypeManagementPanel',key='shippable')"
                             dataField="shippable" textAlign="center">
              <mx:itemRenderer>
                  <mx:Component>
                      <mx:HBox horizontalAlign="center"><mx:CheckBox enabled="false" selected="{data.shippable}"/></mx:HBox>
                  </mx:Component>
              </mx:itemRenderer>
          </mx:DataGridColumn>
          <mx:DataGridColumn headerText="@Resource(bundle='ProductTypeManagementPanel',key='service')"
                             dataField="service" textAlign="center">
              <mx:itemRenderer>
                  <mx:Component>
                      <mx:HBox horizontalAlign="center"><mx:CheckBox enabled="false" selected="{data.service}"/></mx:HBox>
                  </mx:Component>
              </mx:itemRenderer>
          </mx:DataGridColumn>
          <mx:DataGridColumn headerText="@Resource(bundle='ProductTypeManagementPanel',key='digital')"
                             dataField="digital" textAlign="center">
              <mx:itemRenderer>
                  <mx:Component>
                      <mx:HBox horizontalAlign="center"><mx:CheckBox enabled="false" selected="{data.digital}"/></mx:HBox>
                  </mx:Component>
              </mx:itemRenderer>
          </mx:DataGridColumn>
          <mx:DataGridColumn
                  headerText="@Resource(bundle='ProductTypeManagementPanel',key='downloadable')"
                  dataField="downloadable" textAlign="center">
              <mx:itemRenderer>
                  <mx:Component>
                      <mx:HBox horizontalAlign="center"><mx:CheckBox enabled="false" selected="{data.downloadable}"/></mx:HBox>
                  </mx:Component>
              </mx:itemRenderer>
          </mx:DataGridColumn>
      </mx:columns>
    </mx:DataGrid>
    <mx:ControlBar width="100%" horizontalAlign="right">
      <mx:Button id="selectProductTypeButton" label="@Resource(bundle='ProductManagementPanel',key='select')"
                 enabled="{hasSelection}"/>
      <mx:Button label="@Resource(bundle='ShopManagerApplication',key='close')"
                 click="PopUpManager.removePopUp(this)"/>
    </mx:ControlBar>
  </mx:VBox>

</mx:TitleWindow>
