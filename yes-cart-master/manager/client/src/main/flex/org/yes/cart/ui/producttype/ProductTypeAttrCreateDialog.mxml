<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright 2009 Denys Pavlov, Igor Azarnyi
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="440" height="370"
                title="@Resource(bundle='ProductTypeManagementPanel',key='productTypeAttr')"
                showCloseButton="true"
                close="PopUpManager.removePopUp(this)"
           creationComplete="init();">


    <mx:Form width="100%">
        <mx:FormItem label="@Resource(bundle='ProductTypeManagementPanel',key='name')">
            <mx:HBox>
                <mx:TextInput id="attributeName" width="200" editable="false"/>
                <mx:Button
                        label="..." width="30"
                        toolTip="@Resource(bundle='AttributeCreateEditDialog',key='selectAttribute')"
                        click="onAssignAttributeClick(event)"
                        />
            </mx:HBox>
        </mx:FormItem>

        <mx:FormItem label="@Resource(bundle='ProductTypeManagementPanel',key='visible')">
            <mx:CheckBox id="visibleCheckBox"
                         toolTip="@Resource(bundle='ProductTypeManagementPanel',key='visibleHint')"/>
        </mx:FormItem>

        <mx:FormItem label="@Resource(bundle='ProductTypeManagementPanel',key='similarity')">
            <mx:CheckBox id="similarityCheckBox"
                         toolTip="@Resource(bundle='ProductTypeManagementPanel',key='similarityHint')"
                    />
        </mx:FormItem>

        <mx:FormItem label="@Resource(bundle='ProductTypeManagementPanel',key='store')">
            <mx:CheckBox id="storeCheckBox" enabled="false"
                         toolTip="@Resource(bundle='ProductTypeManagementPanel',key='storeHint')"
                    />
        </mx:FormItem>

        <mx:FormItem label="@Resource(bundle='ProductTypeManagementPanel',key='primary')">
            <mx:CheckBox id="primaryCheckBox"  enabled="false"
                         toolTip="@Resource(bundle='ProductTypeManagementPanel',key='primaryHint')"
                    />
        </mx:FormItem>

        <mx:FormItem label="@Resource(bundle='ProductTypeManagementPanel',key='search')">
            <mx:CheckBox id="searchCheckBox"  enabled="false"
                         toolTip="@Resource(bundle='ProductTypeManagementPanel',key='searchHint')"
                    />
        </mx:FormItem>

        <mx:FormItem label="@Resource(bundle='ProductTypeManagementPanel',key='navigation')">
            <mx:CheckBox id="navigationCheckBox"  enabled="false"
                         toolTip="@Resource(bundle='ProductTypeManagementPanel',key='navigationHint')"
                    />
        </mx:FormItem>

        <mx:FormItem label="@Resource(bundle='ProductTypeManagementPanel',key='navigationType')" visible="{navigationEnabled}">
            <mx:RadioButtonGroup id="navtype" itemClick="onNavigationTypeClick(event);" selectedValue="S"/>
            <mx:RadioButton id="navTypeSingle" groupName="navtype" value="S"
                            label="@Resource(bundle='ProductTypeManagementPanel',key='singleValueNavigation')"
                            toolTip="@Resource(bundle='ProductTypeManagementPanel',key='singleValueNavigationHint')"
                    />
            <mx:HBox>
                <mx:RadioButton id="navTypeRange" groupName="navtype" value="R"
                            label="@Resource(bundle='ProductTypeManagementPanel',key='valueRangeNavigation')"
                            toolTip="@Resource(bundle='ProductTypeManagementPanel',key='valueRangeNavigationHint')"
                        />
                <mx:Button id="editRangeNavigationXmlBtn"
                       enabled="{navigationTypeRangeEditEnabled}"
                       label="@Resource(bundle='ProductTypeManagementPanel',key='rangeNavigationBtn')"
                       toolTip="@Resource(bundle='ProductTypeManagementPanel',key='rangeNavigationEdit')"
                        click="editRangeNavigationXml(event)"/>
            </mx:HBox>

        </mx:FormItem>

        <mx:FormItem label="@Resource(bundle='ProductTypeManagementPanel',key='rankEdit')">
            <mx:TextInput id="rankTextInput" width="200"/>
        </mx:FormItem>


    </mx:Form>

    <mx:ControlBar width="100%" horizontalAlign="right">
        <mx:Button id="saveBtn" label="@Resource(bundle='ProductTypeManagementPanel',key='save')"/>
        <mx:Button id="cancelBtn" label="@Resource(bundle='ProductTypeManagementPanel',key='cancel')"
                   click="PopUpManager.removePopUp(this)"/>
    </mx:ControlBar>

    <mx:Boolean id="navigationTypeRangeEditEnabled">false</mx:Boolean>
    <mx:Boolean id="navigationEnabled">false</mx:Boolean>



    <mx:Script>

        <![CDATA[
        import mx.core.FlexGlobals;

        import org.yes.cart.impl.AttributeDTOImpl;
        import org.yes.cart.impl.ProductTypeAttrDTOImpl;

        import mx.binding.utils.BindingUtils;
        import mx.core.Application;
        import mx.events.ItemClickEvent;
        import mx.managers.PopUpManager;

        import org.yes.cart.ui.attributes.AttributeFinderDialog;

        import org.yes.cart.util.DomainUtils;


        [Bindable]
        public var productTypeAttr:ProductTypeAttrDTOImpl;

        private var rangeNavigationDialog:RangeNavigationDialog;

        private var attributeFinderPopUp:AttributeFinderDialog;

        private function init():void {

            BindingUtils.bindProperty(rankTextInput, "text", productTypeAttr, "rank");
            BindingUtils.bindProperty(visibleCheckBox, "selected", productTypeAttr, "visible");
            BindingUtils.bindProperty(similarityCheckBox, "selected", productTypeAttr, "similarity");

            BindingUtils.bindProperty(productTypeAttr, "rank", rankTextInput, "text");
            BindingUtils.bindProperty(productTypeAttr, "visible", visibleCheckBox, "selected");
            BindingUtils.bindProperty(productTypeAttr, "similarity", similarityCheckBox, "selected");

            if (DomainUtils.isPersistentPK(productTypeAttr.productTypeAttrId)) {
                //edit so set the combo boxes and radio buttons

                updateAttributeData();

                navTypeSingle.selected = (productTypeAttr.navigationType == "S");
                navigationTypeRangeEditEnabled = navTypeRange.selected = (productTypeAttr.navigationType == "R");

            }
        }

        private function onNavigationTypeClick(event:mx.events.ItemClickEvent):void {
            navigationTypeRangeEditEnabled = (event.currentTarget.selectedValue == "R");
            productTypeAttr.navigationType = event.currentTarget.selectedValue;
        }


        private function editRangeNavigationXml(event:flash.events.MouseEvent):void {
            rangeNavigationDialog = RangeNavigationDialog(PopUpManager.createPopUp(
                    DisplayObject(FlexGlobals.topLevelApplication), RangeNavigationDialog, true));
            rangeNavigationDialog.xmlString = productTypeAttr.rangeNavigation;
            rangeNavigationDialog.saveBtn.addEventListener(MouseEvent.CLICK, saveRangeNavigation);
            PopUpManager.centerPopUp(rangeNavigationDialog);
        }

        private function saveRangeNavigation(event:Event):void {
            productTypeAttr.rangeNavigation = rangeNavigationDialog.getXmlString();
            PopUpManager.removePopUp(rangeNavigationDialog);
            rangeNavigationDialog = null;
        }

        private function onAssignAttributeClick(event:MouseEvent):void {
            attributeFinderPopUp = AttributeFinderDialog(PopUpManager.createPopUp(DisplayObject(FlexGlobals.topLevelApplication), AttributeFinderDialog, true));
            attributeFinderPopUp.selectAttributeButton.addEventListener(MouseEvent.CLICK, onAssignSelectedAttributeConfirm);
            PopUpManager.centerPopUp(attributeFinderPopUp);
        }

        private function onAssignSelectedAttributeConfirm(event:Event):void {
            if (attributeFinderPopUp != null) {
                var attributes:Array = attributeFinderPopUp.attributeSelection;
                if (attributes.length > 0) {
                    productTypeAttr.attributeDTO = AttributeDTOImpl(attributes[0]);
                    updateAttributeData();
                }
                attributeFinderPopUp.selectAttributeButton.removeEventListener(MouseEvent.CLICK, onAssignSelectedAttributeConfirm);
                PopUpManager.removePopUp(attributeFinderPopUp);
                attributeFinderPopUp = null;
            }
        }

        private function updateAttributeData():void {

            attributeName.text = productTypeAttr.attributeDTO.name + ' (' + productTypeAttr.attributeDTO.code + ')';

            storeCheckBox.selected = productTypeAttr.attributeDTO.store;
            primaryCheckBox.selected = productTypeAttr.attributeDTO.primary;
            searchCheckBox.selected = productTypeAttr.attributeDTO.search;
            navigationCheckBox.selected = productTypeAttr.attributeDTO.navigation;
            navigationEnabled = productTypeAttr.attributeDTO.navigation;
        }
        ]]></mx:Script>
</mx:TitleWindow>