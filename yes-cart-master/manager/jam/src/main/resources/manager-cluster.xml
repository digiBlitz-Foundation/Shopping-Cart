<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2009 Denys Pavlov, Igor Azarnyi
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">


    <import resource="classpath:manager-cluster-${cluster.config.protocol}.xml"/>

    <bean id="runtimeConstants" class="org.yes.cart.utils.impl.RuntimeConstantsImpl">
        <constructor-arg>
            <map>
                <entry key="webapp.yes.context.path" value="${webapp.yes.context.path}"/>
                <entry key="webapp.yes.war.name" value="${webapp.yes.war.name}"/>
                <entry key="webapp.api.context.path" value="${webapp.api.context.path}"/>
                <entry key="webapp.api.war.name" value="${webapp.api.war.name}"/>
                <entry key="webapp.admin.context.path" value="${webapp.admin.context.path}"/>
                <entry key="webapp.admin.war.name" value="${webapp.admin.war.name}"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="localBackdoorService" parent="txProxyTemplate">
        <property name="target">
            <bean class="org.yes.cart.web.service.ws.impl.LocalBackdoorServiceImpl">
                <property name="productService" ref="productService"/>
            </bean>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="sqlQuery">PROPAGATION_REQUIRED,-Throwable</prop>
                <prop key="hsqlQuery">PROPAGATION_REQUIRED,readOnly,-Throwable</prop>
                <prop key="luceneQuery">PROPAGATION_REQUIRED,readOnly,-Throwable</prop>
                <prop key="*">PROPAGATION_NOT_SUPPORTED</prop>
            </props>
        </property>
    </bean>

    <bean id="localCacheDirector" class="org.yes.cart.web.service.ws.impl.LocalCacheDirectorImpl">
        <property name="entityOperationCache" ref="evictionConfig"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="skipEvictAll">
            <set>
                <value>alertDirector-alertsStorage</value>
            </set>
        </property>
    </bean>

    <bean id="localAlertDirector" class="org.yes.cart.web.service.ws.impl.LocalAlertDirectorImpl">
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <bean id="alertTurboFilter" class="org.yes.cart.util.log.AlertTurboFilter"/>

    <bean id="webAppManagerAsyncContextFactory" class="org.yes.cart.web.service.ws.client.WebAppManagerAsyncContextFactory">
        <constructor-arg index="0" ref="managerService"/>
    </bean>

    <bean id="clusterService" class="org.yes.cart.service.cluster.impl.ClusterServiceImpl">
        <constructor-arg index="0" ref="nodeService"/>
        <constructor-arg index="1" ref="localBackdoorService"/>
        <constructor-arg index="2" ref="localCacheDirector"/>
        <constructor-arg index="3" ref="localAlertDirector"/>
    </bean>

    <bean id="productIndexExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <description>
            Thread pool (1,max int) for product indexing since they may be slow.
        </description>
    </bean>

    <bean id="reindexService" class="org.yes.cart.service.cluster.impl.ReindexServiceImpl">
        <constructor-arg index="0" ref="productIndexExecutor"/>
        <constructor-arg index="1" ref="clusterService"/>
        <constructor-arg index="2" ref="nodeService"/>
    </bean>


</beans>
        
